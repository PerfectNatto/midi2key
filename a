def fold_overlap_add_idx(
    frames: torch.Tensor,        # (B, win_length, n_frames)
    win_length: int,
    hop_length: int,
    output_samples: int,
) -> torch.Tensor:
    """
    1-D Fold と同値の Overlap-Add。
    依存演算: aten.index_add / arange / view / transpose など
              →  graph に aten.add.Tensor は現れない
    """

    # ---- (B, K, T) → (B, T, K) ------------------------------------------
    frames = frames.transpose(1, 2).contiguous()
    B, T, K = frames.shape
    assert K == win_length, "win_length mismatch"

    # ---- 出力バッファ -----------------------------------------------------
    y = torch.zeros(B, output_samples, dtype=frames.dtype,
                    device=frames.device)

    # ---- 1-D インデックス -------------------------------------------------
    base = torch.arange(T, device=frames.device) * hop_length      # (T,)
    idx  = (base[:, None] + torch.arange(K, device=frames.device)) # (T, K)
    idx  = idx.flatten()                                           # (T·K,)

    # ---- index_add_ で重なり加算 -----------------------------------------
    y.index_add_(1, idx, frames.reshape(B, -1))                    # aten.index_add_

    return y.view(B, 1, 1, -1)
